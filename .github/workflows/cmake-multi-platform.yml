name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            compiler: gcc
            generator: "Unix Makefiles"
            build_type: Release
          - os: ubuntu-latest
            compiler: clang
            generator: "Unix Makefiles"
            build_type: Release
            env: {CC: clang, CXX: clang++}
          - os: windows-latest
            compiler: gcc
            generator: "MinGW Makefiles"
            build_type: Release
          - os: windows-latest
            compiler: msvc
            generator: "Visual Studio 17 2022"
            build_type: Release
          - os: macos-latest
            compiler: clang
            generator: "Unix Makefiles"
            build_type: Release

    steps:
    - uses: actions/checkout@v4

    - name: Install GCC on Windows (if needed)
      if: matrix.os == 'windows-latest' && matrix.compiler == 'gcc'
      run: |
        choco install mingw -y
        echo "C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin" >> $GITHUB_PATH

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -S ${{ github.workspace }} \
          -G "${{ matrix.generator }}" \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          ${{ matrix.compiler == 'gcc' && matrix.os == 'windows-latest' && '-DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++' || '' }}

    - name: Build
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: |
        ctest --build-config ${{ matrix.build_type }} --output-on-failure